#!/usr/bin/env python3
"""
deploy builds the passed component, copies and installs it onto the passed
remote user and host, and restarts the component.

This needs to be run from the project root.
"""

import sys
import subprocess


def run(cmd):
    return subprocess.check_output(
        cmd, shell=True, stderr=subprocess.STDOUT).decode('utf-8').split()


def log_err(*args, **kwargs):
    print(*args, file=sys.stderr, **kwargs)


def deploy(user, host, component, args):
    try:
        user_and_host = '{}@{}'.format(user, host)

        print('Making {}.'.format(component))
        run('make {}'.format(component))
        print()

        files = {'util', 'build'}
        print('Copying files to remote.')
        run('rsync -az {} {}:~/greenerthumb'.format(' '.join(files),
                                                    user_and_host, host))
        print()

        print('Restarting the component on the remote.')
        command = '''ssh {} << EOF
sudo rsync -a greenerthumb /opt
rm -rf greenerthumb
cd /opt/greenerthumb
rm -f error.log
source util/activate.sh
pkill -f greenerthumb || true
nohup bash -c 'greenerthumb-run-{} {}' > /dev/null 2>> error.log &
EOF
        '''.format(user_and_host, component, args)
        run(command)
        print()

        print('Checking for success.')
        print()
        result = run(
            'ssh {} cat /opt/greenerthumb/error.log'.format(user_and_host))
        if result == '':
            log_err("Couldn't start the component:")
            log_err()
            log_err(result)
            log_err()
            sys.exit(4)
    except subprocess.CalledProcessError as exc:
        log_err()
        log_err("Error with command '{}':".format(exc.cmd))
        log_err()
        log_err(exc.output.decode('utf-8'))


def usage():
    log_err('')
    log_err('util/deploy <user> <host> <component> <args>')
    log_err('')
    log_err('deploy builds the passed component, copies and installs it onto')
    log_err('the passed remote user and host, and restarts the component.')
    log_err('')
    log_err('An example is:')
    log_err('')
    log_err('    util/deploy pi 192.168.1.100 air :5050')
    log_err('')
    sys.exit(2)


if __name__ == '__main__':
    if len(sys.argv) != 5:
        usage()
    user = sys.argv[1]
    host = sys.argv[2]
    component = sys.argv[3]
    args = sys.argv[4]

    deploy(user, host, component, args)
