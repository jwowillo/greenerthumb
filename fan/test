#!/usr/bin/env python3
"""
test finds all files with extension 'test' in the directory 'data' and runs
them.

Tests are expected to have the format:

    <command>
    <error_code>
    <output>...

test runs the command and first checks that the commands error-code matches the
expected error-code. Then, test makes sure that each line of command output
matches with each line of expected output without checking order.

test exits with a non-zero exit-code and the failed assertion if any file fails.

An example passing test is:

    echo a; echo b
    0
    b
    a
"""

import glob
import os
import subprocess


def test(base):
    for path in glob.glob('{}/*.test'.format(base)):
        with open(path) as handle:
            lines = [line[:-1] for line in handle if not line.startswith('#')]
            cmd = lines[0]
            ec = int(lines[1])
            rest = sorted(lines[2:])

            result = subprocess.run(
                cmd,
                shell=True,
                stdout=subprocess.PIPE,
                stderr=subprocess.PIPE)

            output = sorted(result.stdout.decode('utf-8').split('\n')[:-1])

            try:
                assert output == rest
                assert result.returncode == ec
            except AssertionError as error:
                print('Error in', path)
                print()
                print('Actual output:')
                print(output)
                print()
                print('Expected output:')
                print(rest)
                print()
                print('Actual error-code:')
                print(result.returncode)
                print()
                print('Expected error-code:')
                print(ec)
                print()
                raise error


if __name__ == '__main__':
    test('data')
